{"ast":null,"code":"import axios from 'axios';\nimport { EDIT_SOLDIER_START, EDIT_SOLDIER_FAIL, EDIT_SOLDIER_SUCCESS } from '../reducers/types';\n\nconst editSoldierStart = () => ({\n  type: EDIT_SOLDIER_START\n});\n\nconst editSoldierFail = error => ({\n  type: EDIT_SOLDIER_FAIL,\n  error\n});\n\nconst editSoldierSuccess = () => ({\n  type: EDIT_SOLDIER_SUCCESS\n});\n\nexport const editSoldier = (query, avatar, history) => dispatch => {\n  console.log(\"edit\");\n  const endPoint = \"http://localhost:4000/api/soldier\";\n  const id = query._id;\n  dispatch(editSoldierStart());\n  return axios.put(`${endPoint}/${id}`, query).then(() => {\n    if (avatar) {\n      const data = new FormData();\n      data.append(\"avatar\", avatar);\n      return axios.post(`${endPoint}/avatar/${id}`, data).then(() => {\n        dispatch(editSoldierSuccess());\n        history.push(\"/\");\n      }).catch(err => {\n        dispatch(editSoldierFail({\n          message: \"Edit soldier avatar failed\"\n        }));\n      });\n    } else {\n      dispatch(editSoldierSuccess());\n      history.push(\"/\");\n    }\n  }).catch(() => {\n    dispatch(editSoldierFail({\n      message: \"Edit soldier failed\"\n    }));\n  });\n};","map":{"version":3,"sources":["/Users/caroline/Desktop/interview/practice/us-army/src/client/redux/action-creators/edit-soldier.js"],"names":["axios","EDIT_SOLDIER_START","EDIT_SOLDIER_FAIL","EDIT_SOLDIER_SUCCESS","editSoldierStart","type","editSoldierFail","error","editSoldierSuccess","editSoldier","query","avatar","history","dispatch","console","log","endPoint","id","_id","put","then","data","FormData","append","post","push","catch","err","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,EAA4BC,iBAA5B,EAA8CC,oBAA9C,QAA0E,mBAA1E;;AAEA,MAAMC,gBAAgB,GAAG,OAAO;AAC9BC,EAAAA,IAAI,EAAEJ;AADwB,CAAP,CAAzB;;AAIA,MAAMK,eAAe,GAAGC,KAAK,KAAK;AAChCF,EAAAA,IAAI,EAAEH,iBAD0B;AAEhCK,EAAAA;AAFgC,CAAL,CAA7B;;AAKA,MAAMC,kBAAkB,GAAG,OAAO;AAChCH,EAAAA,IAAI,EAAEF;AAD0B,CAAP,CAA3B;;AAIA,OAAO,MAAMM,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,EAAcC,OAAd,KAA2BC,QAAD,IAAc;AACjEC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAMC,QAAQ,GAAG,mCAAjB;AACA,QAAMC,EAAE,GAAGP,KAAK,CAACQ,GAAjB;AACAL,EAAAA,QAAQ,CAACT,gBAAgB,EAAjB,CAAR;AACA,SAAOJ,KAAK,CAACmB,GAAN,CAAW,GAAEH,QAAS,IAAGC,EAAG,EAA5B,EAA8BP,KAA9B,EACNU,IADM,CACD,MAAM;AACV,QAAIT,MAAJ,EAAY;AACV,YAAMU,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAY,QAAZ,EAAqBZ,MAArB;AACA,aAAOX,KAAK,CAACwB,IAAN,CAAY,GAAER,QAAS,WAAUC,EAAG,EAApC,EAAsCI,IAAtC,EACND,IADM,CACD,MAAM;AACVP,QAAAA,QAAQ,CAACL,kBAAkB,EAAnB,CAAR;AACAI,QAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD,OAJM,EAKNC,KALM,CAKAC,GAAG,IAAI;AACZd,QAAAA,QAAQ,CAACP,eAAe,CAAC;AAAEsB,UAAAA,OAAO,EAAE;AAAX,SAAD,CAAhB,CAAR;AACD,OAPM,CAAP;AAQD,KAXD,MAWO;AACLf,MAAAA,QAAQ,CAACL,kBAAkB,EAAnB,CAAR;AACAI,MAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD;AACF,GAjBM,EAkBNC,KAlBM,CAkBA,MAAM;AACXb,IAAAA,QAAQ,CAACP,eAAe,CAAC;AAAEsB,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAhB,CAAR;AACD,GApBM,CAAP;AAqBD,CA1BM","sourcesContent":["import axios from 'axios';\r\nimport { EDIT_SOLDIER_START,EDIT_SOLDIER_FAIL,EDIT_SOLDIER_SUCCESS } from '../reducers/types';\r\n\r\nconst editSoldierStart = () => ({\r\n  type: EDIT_SOLDIER_START\r\n});\r\n\r\nconst editSoldierFail = error => ({\r\n  type: EDIT_SOLDIER_FAIL,\r\n  error\r\n});\r\n\r\nconst editSoldierSuccess = () => ({\r\n  type: EDIT_SOLDIER_SUCCESS\r\n});\r\n\r\nexport const editSoldier = (query,avatar,history) => (dispatch) => {\r\n  console.log(\"edit\");\r\n  const endPoint = \"http://localhost:4000/api/soldier\";\r\n  const id = query._id;\r\n  dispatch(editSoldierStart());\r\n  return axios.put(`${endPoint}/${id}`,query)\r\n  .then(() => {\r\n    if (avatar) {\r\n      const data = new FormData();\r\n      data.append(\"avatar\",avatar);\r\n      return axios.post(`${endPoint}/avatar/${id}`,data)\r\n      .then(() => {\r\n        dispatch(editSoldierSuccess());\r\n        history.push(\"/\");\r\n      })\r\n      .catch(err => {\r\n        dispatch(editSoldierFail({ message: \"Edit soldier avatar failed\" }));\r\n      });\r\n    } else {\r\n      dispatch(editSoldierSuccess());\r\n      history.push(\"/\");\r\n    }\r\n  })\r\n  .catch(() => {\r\n    dispatch(editSoldierFail({ message: \"Edit soldier failed\" }));\r\n  });\r\n};"]},"metadata":{},"sourceType":"module"}