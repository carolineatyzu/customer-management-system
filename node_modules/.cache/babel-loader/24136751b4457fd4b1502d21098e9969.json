{"ast":null,"code":"var _jsxFileName = \"/Users/caroline/Desktop/interview/practice/us-army/src/client/componenets/soldier-list/list.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSort, faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport { Box, Grid, Table, TableHead, TableBody, TableRow, TableCell, CircularProgress } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport * as actions from '../../redux/action-creators/soldier-list';\nimport { delSoldier } from '../../redux/action-creators/del-soldier';\nimport Entry from './list-entry';\nimport { Alert } from '@material-ui/lab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: \"#5B9BD5\",\n    color: \"white\",\n    fontSize: 16,\n    fontWeight: 600,\n    border: \"2px solid white\"\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    height: 5,\n    padding: 0\n  }\n}))(TableRow);\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleScroll = entries => {\n      const {\n        fetchList,\n        updateQuery\n      } = this.props; // console.log(entries[0].intersectionRatio,this.props.pageNum);\n\n      if (entries[0].intersectionRatio > 0 && this.props.pageNum !== 0) {\n        if (this.props.pageNum < this.props.list.nextPage) {\n          updateQuery({\n            pageNum: this.props.list.nextPage\n          });\n          fetchList();\n        }\n      }\n    };\n\n    this.toggleSort = field => () => {\n      const {\n        updateQuery,\n        cleanList,\n        asc: sort\n      } = this.props;\n      let asc = sort === 0 ? 1 : sort === 1 ? -1 : 0;\n\n      if (this.props.query.field !== field) {\n        asc = 1;\n      }\n\n      updateQuery({\n        field,\n        asc\n      });\n      this.fillTable(1, true);\n    };\n\n    this.displayArrow = field => {\n      if (this.props.query.field === field) {\n        switch (this.props.asc) {\n          case 1:\n            return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSortUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 18\n            }, this);\n\n          case -1:\n            return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSortDown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 18\n            }, this);\n\n          default:\n            return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSort\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 18\n            }, this);\n        }\n      }\n    };\n\n    this.handleLoadSup = supid => () => {\n      const {\n        updateQuery\n      } = this.props;\n      updateQuery({\n        supid,\n        sub: \"\",\n        q: \"\",\n        field: \"\",\n        asc: 0\n      });\n      this.fillTable(1, true);\n    };\n\n    this.handleLoadSub = sub => () => {\n      const {\n        updateQuery\n      } = this.props;\n      updateQuery({\n        supid: \"\",\n        sub,\n        q: \"\",\n        field: \"\",\n        asc: 0\n      });\n      this.fillTable(1, true);\n    };\n\n    this.handleDelete = id => () => {\n      const {\n        delSoldier,\n        cleanList\n      } = this.props;\n      delSoldier(id, () => {\n        this.fillTable(1, true);\n      });\n    };\n\n    this.handleEdit = id => () => {\n      this.props.routerPush(\"edit\", {\n        id\n      });\n    };\n\n    this.fillTable = async (pageNum = 1, replace = false) => {\n      const {\n        fetchList,\n        updateQuery\n      } = this.props;\n      updateQuery({\n        pageNum\n      });\n      await fetchList(replace);\n\n      while (this.scroller.current.getBoundingClientRect().bottom < window.innerHeight && this.props.list.hasNextPage) {\n        updateQuery({\n          pageNum: ++pageNum\n        });\n        await fetchList();\n      }\n    };\n\n    this.props = props;\n    this.scroller = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const options = {\n      root: null,\n      rootMargin: '10px',\n      threshold: [0, 0.25, 0.75, 1]\n    };\n    const observer = new IntersectionObserver(this.handleScroll, options);\n\n    if (this.scroller.current) {\n      observer.observe(this.scroller.current);\n    }\n\n    this.fillTable(this.props.pageNum);\n  }\n\n  componentWillUnmount() {\n    const {\n      cleanList,\n      updateQuery\n    } = this.props;\n    updateQuery({\n      pageNum: 1\n    });\n    cleanList();\n  }\n\n  render() {\n    var _list$docs;\n\n    const {\n      list,\n      state\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        className: \"soldier-list\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            padding: 0,\n            className: \"table-header\",\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              onClick: this.toggleSort(\"name\"),\n              children: [\"Name \", this.displayArrow(\"name\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              onClick: this.toggleSort(\"sex\"),\n              children: [\"Sex \", this.displayArrow(\"sex\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              onClick: this.toggleSort(\"rank\"),\n              children: [\"Rank \", this.displayArrow(\"rank\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              onClick: this.toggleSort(\"startDate\"),\n              children: [\"Start Date \", this.displayArrow(\"startDate\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              onClick: this.toggleSort(\"phone\"),\n              children: [\"Phone \", this.displayArrow(\"phone\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              onClick: this.toggleSort(\"email\"),\n              children: [\"Email \", this.displayArrow(\"email\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              onClick: this.toggleSort(\"superior\"),\n              children: [\"Superior \", this.displayArrow(\"superior\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"# of D.S.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: (_list$docs = list.docs) === null || _list$docs === void 0 ? void 0 : _list$docs.map(soldier => /*#__PURE__*/_jsxDEV(Entry, {\n            soldier: soldier,\n            handleLoadSub: this.handleLoadSub,\n            handleLoadSup: this.handleLoadSup,\n            handleDelete: this.handleDelete,\n            handleEdit: this.handleEdit\n          }, soldier._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.scroller\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), list.hasNextPage && state !== 1 && /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 97\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 46\n      }, this), this.props.error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: \"this.props.error.message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  list: state.soldierList.list,\n  state: state.soldierList.state,\n  pageNum: state.soldierList.query.pageNum,\n  asc: state.soldierList.query.asc,\n  query: state.soldierList.query\n});\n\nconst mapDispathToProps = dispatch => ({\n  fetchList: (replace = false) => {\n    return dispatch(actions.fetchSoldierList(replace));\n  },\n  cleanList: () => {\n    dispatch(actions.cleanSoldierList());\n  },\n  updateQuery: query => {\n    dispatch(actions.updateListQuery(query));\n  },\n  delSoldier: (id, callback) => dispatch(delSoldier(id, callback))\n});\n\nexport default connect(mapStateToProps, mapDispathToProps)(List);","map":{"version":3,"sources":["/Users/caroline/Desktop/interview/practice/us-army/src/client/componenets/soldier-list/list.js"],"names":["React","Component","connect","FontAwesomeIcon","faSort","faSortUp","faSortDown","Box","Grid","Table","TableHead","TableBody","TableRow","TableCell","CircularProgress","withStyles","actions","delSoldier","Entry","Alert","StyledTableCell","theme","head","backgroundColor","color","fontSize","fontWeight","border","StyledTableRow","root","height","padding","List","constructor","props","handleScroll","entries","fetchList","updateQuery","intersectionRatio","pageNum","list","nextPage","toggleSort","field","cleanList","asc","sort","query","fillTable","displayArrow","handleLoadSup","supid","sub","q","handleLoadSub","handleDelete","id","handleEdit","routerPush","replace","scroller","current","getBoundingClientRect","bottom","window","innerHeight","hasNextPage","createRef","componentDidMount","options","rootMargin","threshold","observer","IntersectionObserver","observe","componentWillUnmount","render","state","docs","map","soldier","_id","error","mapStateToProps","soldierList","mapDispathToProps","dispatch","fetchSoldierList","cleanSoldierList","updateListQuery","callback"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSort,faSortUp,faSortDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { Box,Grid,Table,TableHead,TableBody, TableRow,TableCell, CircularProgress } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nimport * as actions from '../../redux/action-creators/soldier-list';\r\nimport { delSoldier } from '../../redux/action-creators/del-soldier';\r\nimport Entry from './list-entry';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#5B9BD5\",\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    fontWeight: 600,\r\n    border: \"2px solid white\",\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    height: 5,\r\n    padding: 0,\r\n  }\r\n}))(TableRow);\r\n\r\nclass List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n    this.scroller = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    const options = {\r\n      root: null,\r\n      rootMargin: '10px',\r\n      threshold:  [0,0.25,0.75,1]\r\n    };\r\n    const observer = new IntersectionObserver(this.handleScroll,options);\r\n    if (this.scroller.current) {\r\n      observer.observe(this.scroller.current);\r\n    }\r\n    this.fillTable(this.props.pageNum);\r\n  }\r\n  componentWillUnmount() {\r\n    const { cleanList,updateQuery } = this.props;\r\n    updateQuery({ pageNum: 1 });\r\n    cleanList();\r\n  }\r\n  handleScroll = (entries) => {\r\n    const { fetchList,updateQuery } = this.props;\r\n    // console.log(entries[0].intersectionRatio,this.props.pageNum);\r\n    if (entries[0].intersectionRatio > 0 && this.props.pageNum !== 0) {\r\n      if(this.props.pageNum < this.props.list.nextPage) {\r\n        updateQuery({ pageNum: this.props.list.nextPage });\r\n        fetchList();\r\n      }\r\n    }\r\n  }\r\n  toggleSort =  (field) => () => {\r\n    const { updateQuery, cleanList, asc: sort } = this.props;\r\n    let asc = sort === 0 ? 1: sort === 1? -1 : 0;\r\n    if (this.props.query.field !== field) {\r\n      asc = 1;\r\n    }\r\n    updateQuery({ field, asc });\r\n    this.fillTable(1,true);\r\n  }\r\n  displayArrow = (field) => {\r\n    if (this.props.query.field === field) {\r\n      switch(this.props.asc) {\r\n        case 1:\r\n          return <FontAwesomeIcon icon={faSortUp} />\r\n        case -1:\r\n          return <FontAwesomeIcon icon={faSortDown} />\r\n        default:\r\n          return <FontAwesomeIcon icon={faSort} />\r\n      }\r\n    }\r\n  }\r\n  handleLoadSup = (supid) => () => {\r\n    const { updateQuery } = this.props;\r\n    updateQuery({ supid,sub: \"\",q: \"\",field: \"\", asc: 0 });\r\n    this.fillTable(1,true);\r\n  }\r\n  handleLoadSub = (sub) => () => {\r\n    const { updateQuery } = this.props;\r\n    updateQuery({ supid:\"\",sub,q: \"\",field: \"\", asc: 0 });\r\n    this.fillTable(1,true);\r\n  }\r\n  handleDelete = (id) => () => {\r\n    const { delSoldier,cleanList } = this.props;\r\n    delSoldier(id,() => {\r\n      this.fillTable(1,true);\r\n    });\r\n  }\r\n  handleEdit = (id) => () => {\r\n    this.props.routerPush(\"edit\", { id });\r\n  }\r\n  fillTable = async (pageNum=1,replace=false) => {\r\n    const { fetchList,updateQuery } = this.props;\r\n    updateQuery({ pageNum });\r\n    await fetchList(replace);\r\n    while(this.scroller.current.getBoundingClientRect().bottom < window.innerHeight\r\n    && this.props.list.hasNextPage) {\r\n      updateQuery({ pageNum: ++pageNum });\r\n      await fetchList();\r\n    }\r\n  }\r\n  render() {\r\n    const { list,state } = this.props;\r\n    return (\r\n      <Box>\r\n        <Table className=\"soldier-list\">\r\n          <TableHead>\r\n            <StyledTableRow padding={0} className=\"table-header\">\r\n              <StyledTableCell align=\"left\">Avatar</StyledTableCell>\r\n              <StyledTableCell align=\"left\" onClick={this.toggleSort(\"name\")}>Name {this.displayArrow(\"name\")}</StyledTableCell>\r\n              <StyledTableCell align=\"left\" onClick={this.toggleSort(\"sex\")}>Sex {this.displayArrow(\"sex\")}</StyledTableCell>\r\n              <StyledTableCell align=\"left\" onClick={this.toggleSort(\"rank\")}>Rank {this.displayArrow(\"rank\")}</StyledTableCell>\r\n              <StyledTableCell align=\"left\" onClick={this.toggleSort(\"startDate\")}>Start Date {this.displayArrow(\"startDate\")}</StyledTableCell>\r\n              <StyledTableCell align=\"left\" onClick={this.toggleSort(\"phone\")}>Phone {this.displayArrow(\"phone\")}</StyledTableCell>\r\n              <StyledTableCell align=\"left\" onClick={this.toggleSort(\"email\")}>Email {this.displayArrow(\"email\")}</StyledTableCell>\r\n              <StyledTableCell align=\"left\" onClick={this.toggleSort(\"superior\")}>Superior {this.displayArrow(\"superior\")}</StyledTableCell>\r\n              <StyledTableCell align=\"left\"># of D.S.</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Edit</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Delete</StyledTableCell>\r\n            </StyledTableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            { \r\n              list.docs?.map(soldier => (\r\n                <Entry \r\n                key={soldier._id} \r\n                soldier={soldier} \r\n                handleLoadSub={this.handleLoadSub} \r\n                handleLoadSup={this.handleLoadSup} \r\n                handleDelete={this.handleDelete}\r\n                handleEdit={this.handleEdit}\r\n                />\r\n              ))\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n        <div ref={this.scroller}></div>\r\n        {\r\n          list.hasNextPage && state !== 1 && <Box display=\"flex\" justifyContent=\"space-around\" ><CircularProgress /></Box>\r\n        }\r\n        {\r\n          this.props.error &&\r\n          <Alert severity=\"error\">this.props.error.message</Alert>\r\n        }\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  list: state.soldierList.list,\r\n  state: state.soldierList.state,\r\n  pageNum: state.soldierList.query.pageNum,\r\n  asc: state.soldierList.query.asc,\r\n  query: state.soldierList.query,\r\n});\r\n\r\nconst mapDispathToProps = dispatch => ({\r\n  fetchList: (replace=false) => {\r\n    return dispatch(actions.fetchSoldierList(replace));\r\n  },\r\n  cleanList: () => {\r\n    dispatch(actions.cleanSoldierList());\r\n  },\r\n  updateQuery: query => {\r\n    dispatch(actions.updateListQuery(query));\r\n  },\r\n  delSoldier: (id,callback) => dispatch(delSoldier(id,callback))\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispathToProps)(List);"]},"metadata":{},"sourceType":"module"}