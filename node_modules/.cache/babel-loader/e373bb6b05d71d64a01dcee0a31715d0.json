{"ast":null,"code":"var _jsxFileName = \"/Users/caroline/Desktop/interview/practice/us-army/src/client/componenets/soldier-list/header-box.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Container, Grid, Box, Link, TextField, createStyles } from '@material-ui/core';\nimport * as actions from '../../redux/action-creators/soldier-list';\nimport { makeStyles, withStyles } from '@material-ui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = withStyles({\n  root: {\n    margin: \"10px 0\"\n  }\n})(Box);\n\nclass HeaderBox extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleInput = e => {\n      this.props.updateQuery({\n        q: e.target.value\n      });\n    };\n\n    this.handleSearch = async e => {\n      const {\n        fetchList,\n        cleanList,\n        updateQuery,\n        scroller\n      } = this.props;\n      let pageNum = 1;\n      updateQuery({\n        pageNum\n      });\n      cleanList();\n      await fetchList();\n\n      while (scroller.current.getBoundingClientRect().bottom < window.innerHeight && this.props.list.hasNextPage) {\n        updateQuery({\n          pageNum: ++pageNum\n        });\n        await fetchList();\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.handleSearch();\n    };\n\n    this.handleReset = async e => {\n      const {\n        fetchList,\n        updateQuery,\n        scroller\n      } = this.props;\n      const initQuery = {\n        q: \"\",\n        field: \"\",\n        asc: 0,\n        pageNum: 1,\n        supid: \"\",\n        sub: \"\"\n      };\n      updateQuery(initQuery);\n      let pageNum = 1;\n      await fetchList(true);\n\n      while (scroller.current.getBoundingClientRect().bottom < window.innerHeight && this.props.list.hasNextPage) {\n        updateQuery({\n          pageNum: ++pageNum\n        });\n        await fetchList();\n      }\n    };\n  }\n\n  render() {\n    const {\n      searchText,\n      routerPush\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          direction: \"row\",\n          wrap: \"nowrap\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            type: \"string\",\n            placeholder: \"Search\",\n            size: \"small\",\n            value: searchText,\n            onChange: this.handleInput,\n            onBlur: this.handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"flex-end\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"button\",\n                onClick: this.handleReset,\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"button\",\n                onClick: () => routerPush('/create'),\n                children: \"New Soldier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => ({\n  searchText: state.soldierList.query.q,\n  list: state.soldierList.list\n});\n\nconst mapDispathToProps = dispatch => ({\n  updateQuery: query => {\n    dispatch(actions.updateListQuery(query));\n  },\n  cleanList: () => {\n    dispatch(actions.cleanSoldierList());\n  },\n  fetchList: replace => {\n    return dispatch(actions.fetchSoldierList(replace));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispathToProps)(HeaderBox);","map":{"version":3,"sources":["/Users/caroline/Desktop/interview/practice/us-army/src/client/componenets/soldier-list/header-box.js"],"names":["React","Component","connect","Button","Container","Grid","Box","Link","TextField","createStyles","actions","makeStyles","withStyles","Wrapper","root","margin","HeaderBox","handleInput","e","props","updateQuery","q","target","value","handleSearch","fetchList","cleanList","scroller","pageNum","current","getBoundingClientRect","bottom","window","innerHeight","list","hasNextPage","handleSubmit","preventDefault","handleReset","initQuery","field","asc","supid","sub","render","searchText","routerPush","mapStateToProps","state","soldierList","query","mapDispathToProps","dispatch","updateListQuery","cleanSoldierList","replace","fetchSoldierList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button,Container,Grid,Box,Link, TextField, createStyles } from '@material-ui/core';\r\n\r\n\r\nimport * as actions from '../../redux/action-creators/soldier-list';\r\nimport { makeStyles, withStyles } from '@material-ui/styles';\r\n\r\nconst Wrapper = withStyles({\r\n  root: {\r\n    margin: \"10px 0\"\r\n  }\r\n})(Box);\r\nclass HeaderBox extends Component {\r\n  handleInput = e => {\r\n    this.props.updateQuery({ q:e.target.value });\r\n  }\r\n  handleSearch = async e => {\r\n    const { fetchList,cleanList,updateQuery,scroller } = this.props;\r\n    let pageNum = 1;\r\n    updateQuery({pageNum});\r\n    cleanList();\r\n    await fetchList();\r\n    while(scroller.current.getBoundingClientRect().bottom < window.innerHeight\r\n    && this.props.list.hasNextPage) {\r\n      updateQuery({ pageNum: ++pageNum });\r\n      await fetchList();\r\n    }\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.handleSearch();\r\n  }\r\n  handleReset = async e => {\r\n    const { fetchList,updateQuery,scroller } = this.props;\r\n    const initQuery = {\r\n      q: \"\",\r\n      field: \"\",\r\n      asc: 0,\r\n      pageNum: 1,\r\n      supid: \"\",\r\n      sub: \"\",\r\n    };\r\n    updateQuery(initQuery);\r\n    let pageNum = 1;\r\n    await fetchList(true);\r\n    while(scroller.current.getBoundingClientRect().bottom < window.innerHeight\r\n    && this.props.list.hasNextPage) {\r\n      updateQuery({ pageNum: ++pageNum });\r\n      await fetchList();\r\n    }\r\n  }\r\n  render() {\r\n    const { searchText,routerPush } = this.props;\r\n    return (\r\n      <Wrapper>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Grid container alignItems=\"center\" direction=\"row\" wrap=\"nowrap\">\r\n            <TextField \r\n            variant=\"outlined\" \r\n            type=\"string\" \r\n            placeholder=\"Search\" \r\n            size=\"small\"\r\n            value={searchText} \r\n            onChange={this.handleInput} \r\n            onBlur={this.handleSearch}\r\n            />\r\n            <Grid container justify=\"flex-end\" alignItems=\"center\">\r\n              <Grid item xs={1}>\r\n                <Button  variant=\"contained\" color=\"primary\" type=\"button\" onClick={this.handleReset}>Reset</Button>\r\n                </Grid>\r\n              <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"button\" onClick={() => routerPush('/create')}>New Soldier</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Wrapper>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  searchText: state.soldierList.query.q,\r\n  list: state.soldierList.list,\r\n});\r\n\r\nconst mapDispathToProps = dispatch => ({\r\n  updateQuery: query => {\r\n    dispatch(actions.updateListQuery(query));\r\n  },\r\n  cleanList: () => {\r\n    dispatch(actions.cleanSoldierList());\r\n  },\r\n  fetchList: (replace) => {\r\n    return dispatch(actions.fetchSoldierList(replace));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispathToProps)(HeaderBox);"]},"metadata":{},"sourceType":"module"}